import Head from "next/head";
import Image from "next/image";
import axios from "axios";
import { useState } from "react";
import Weather from "../components/Weather";
import Background from "../assets/background.jpg";
import Search from "../components/Search";
import ErrorModal from "../components/ErrorModal";
import Spinner from "../components/Spinner";

export default function Home() {
  const [weather, setWeather] = useState({});
  const [isErrorModalOpen, setIsErrorModalOpen] = useState(false);
  const [errorMessage, setErrorMessage] = useState("");
  const [checkZip, setCheckZip] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  const openErrorModal = (errorMessage) => {
    setErrorMessage(errorMessage);
    setIsErrorModalOpen(true);
  };

  const closeErrorModal = () => {
    setIsErrorModalOpen(false);
    setErrorMessage("");
  };

  const fetchWeather = async (city) => {
    const newZipArray = [...checkZip.slice(1), city];

    const url = isNaN(city)
      ? `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}&units=imperial`
      : `https://api.openweathermap.org/data/2.5/weather?zip=${city}&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}&units=imperial`;

    if (!city) {
      openErrorModal("ERROR! Please enter a city name or zip code.");
      return;
    } else if (
      city.toLowerCase() === weather?.name?.toLowerCase() ||
      checkZip.includes(city)
    ) {
      openErrorModal(
        "ERROR! Weather for this location is currently displayed."
      );

      return;
    } else {
      try {
        const response = await axios.get(url);
        if (response.status === 200) {
          setIsLoading(true);
          setTimeout(() => {
            const weatherData = response.data;
            setWeather(weatherData);
            setCheckZip([...checkZip, city]);
            setIsLoading(false);
            setCheckZip(newZipArray);
          }, 1000);
          setWeather({});
        } else {
          console.error("Failed to fetch weather data");
        }
      } catch (error) {
        console.error("An error occurred:", error);
        openErrorModal(
          "ERROR! Failed to fetch weather data. Make sure entered city/zip code is correct"
        );
        setIsLoading(false);
      }
    }
  };

  return (
    <div>
      <Head>
        <title>Weather App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Overlay */}
      <div className="absolute top-0 left-0 right-0 bottom-0 bg-black/15 z-[1]" />
      {/* Background image */}
      <Image src={Background} layout="fill" className="object-cover" />

      {/* Search */}
      {<Search onSearch={fetchWeather} disabled={isLoading} />}
      {isErrorModalOpen && (
        <ErrorModal message={errorMessage} onClose={closeErrorModal} />
      )}
      {isLoading ? <Spinner /> : weather.main && <Weather data={weather} />}
    </div>
  );
}
